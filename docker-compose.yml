version: "3.7"

services:
  app:
    container_name: api
    build: 
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env.local
    depends_on:
      - db
      - minio
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=development
      - CONFIG_DB_HOST=db
      - CONFIG_DB_PORT=5432
      - CONFIG_DB_USER=postgres
      - CONFIG_DB_PASSWORD=admin
      - CONFIG_DB_NAME=postgres
      - CONFIG_DB_MAX_CONNECTIONS=20
      - CONFIG_REDIS_HOST=redis
      - CONFIG_REDIS_PORT=6379
      - CONFIG_REDIS_EC_CLUSTER=false
      - CONFIG_REDIS_DISABLE_TLS=true
      - CONFIG_REDIS_DISABLE_TLS_REJECT_UNAUTHORIZED=false
      - CONFIG_REDIS_RECONNECT_MAX_WAIT=3000
      - CONFIG_REDIS_LOCAL_SETUP=true
    networks:
      - server_network

  db:
    image: pgvector/pgvector:pg16
    container_name: pgvector
    command: ["postgres", "-c", "log_statement=all"]
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres
    volumes:
      - ./.data/docker/postgresql:/var/lib/postgresql
    ports:
      - "5433:5432"
    networks:
      - server_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 30s
      retries: 5

  minio:
    image: minio/minio
    container_name: minio
    command: ["minio", "server", "/data"]
    volumes:
      - ./.data/docker/minio:/data
    ports:
      - 9002:9000
      - 9001:9001
    networks:
      - server_network


  redis:
    image: redis/redis-stack:latest
    restart: always
    container_name: redis-stack2
    ports:
      - 6379:6379
    volumes:
      - ./.data/docker/redis:/var/lib/redis
    networks:
      - server_network

networks:
  server_network:
    driver: bridge
